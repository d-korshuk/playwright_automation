name: Playwright tests

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest-playwright
        python -m pip install playwright
        python -m playwright install chromium
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Obtain API token
      env:
        CLIENT_ID: ${{ secrets.CLIENT_ID }}
        EMAIL: ${{ secrets.EMAIL }}
        PASSWORD: ${{ secrets.PASSWORD }}
        AUDIENCE: ${{ secrets.AUDIENCE }}
        API_TOKEN_URL: ${{ secrets.API_TOKEN_URL }}
      run: |
        API_TOKEN=$(curl -X POST -H "Content-Type: application/json" -d '{
          "username": "'"$EMAIL"'",
          "password": "'"$PASSWORD"'",
          "client_id": "'"$CLIENT_ID"'",
          "audience": "'"$AUDIENCE"'",
          "grant_type": "password"
        }' $API_TOKEN_URL/oauth/token | jq -r '.access_token')
        echo "API_TOKEN=$API_TOKEN" >> $GITHUB_ENV
    - name: Test with pytest
      env:
        PASSWORD: ${{ secrets.PASSWORD }}
        URL: ${{ secrets.URL }}
        EMAIL: ${{ secrets.EMAIL }}
        API_URL: ${{ secrets.API_URL }}
        API_TOKEN: ${{ secrets.API_TOKEN }}
      run: |
        xvfb-run pytest
    - name: Print secrets
      run: |
        echo "URL: $URL"
        echo "EMAIL: $EMAIL"
        echo "PASSWORD: $PASSWORD"
        echo "API_URL: $API_URL"
        echo "API_TOKEN: $API_TOKEN"
